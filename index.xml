<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Recent Content on mc-inside </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://inside.mcfog.wang/index.xml/</link>
    
    
    
    <updated>Fri, 23 Jan 2015 13:47:38 CST</updated>
    
    <item>
      <title>kfc</title>
      <link>http://inside.mcfog.wang/lab/kfc/</link>
      <pubDate>Fri, 23 Jan 2015 13:47:38 CST</pubDate>
      
      <guid>http://inside.mcfog.wang/lab/kfc/</guid>
      <description>&lt;!--more--&gt;

&lt;style&gt;
	.coupon {
		float: left;
		margin: 5px;
		position: relative;
		background: #F7F7F7;
		font-size: 0;
	}
	.coupon img {
		height: 140px;
	}
	.coupon h4 {
		position: absolute;
		background: rgba(255, 255, 255, 0.8);
		margin: 0;
		font-size: 2rem;
		left: 0;
		bottom: -1px;
		border-top-right-radius: 5px;
		padding: 2px 5px;
		display: block;
	}

&lt;/style&gt;

&lt;coupon-list /&gt;

&lt;script src=&#34;/js/riot.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/js/kfcoupon/all.js&#34;&gt;&lt;/script&gt;
&lt;script&gt;
	function main(data) {
		riot.mount(&#39;*&#39;, data);
	}
&lt;/script&gt;

&lt;script src=&#34;http://kfcoupon-mcfog.c9.io/coupon?callback=main&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>[新姿势]开源去中心密码生成器PasswordMaker</title>
      <link>http://inside.mcfog.wang/2015/01/tech4fun-3/</link>
      <pubDate>Thu, 22 Jan 2015 14:38:32 CST</pubDate>
      
      <guid>http://inside.mcfog.wang/2015/01/tech4fun-3/</guid>
      <description>&lt;p&gt;在统一密码的方便但不设防和每个站独立密码的麻烦之中，各种密码管理解决方案出现了。关于这个小众需求，我个人无法接受这个密码生成方案是有“中心”的，无论这个中心是商业公司还是某个加密的数据文件。前者我要信赖他的生存能力，国外的不被墙能力和国内的哔—能力；而后者我要小心保护这个数据文件，用一个强密码乃至多层加密来保护它的同时，还要把它同步在不同的电脑和手机之间，这依然是方便和安全之间的悖论。&lt;/p&gt;

&lt;p&gt;今天我要推荐的&lt;a href=&#34;http://passwordmaker.org/&#34;&gt;PasswordMaker.org&lt;/a&gt;基于这样一个并不新但有效的点子：把网站名字和自己记住的一个主密码混合起来用哈希算法计算得到真正的密码。&lt;/p&gt;

&lt;p&gt;passwordmaker的密码生成流程大致如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;配置你的profile，包括密码长度，密码字符集(英文数字还是包括符号等)，哈希算法，l33t混淆等级等。如果需要在多个设备上使用，统一配置即可&lt;/li&gt;
&lt;li&gt;访问目标网站，调用passwordmaker，它会将一级域名作为生成密码的另一个要素&lt;/li&gt;
&lt;li&gt;输入你的主密码，得到生成后的密码&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;过程中不涉及中心服务器或者数据库文件，所以无需担心服务器宕机，数据文件丢失，也没有引入额外的风险 —— 除了你自己的脑子之外，没有别的地方集中记录了你究竟在哪些网站有什么账号&lt;/p&gt;

&lt;p&gt;可能的麻烦和解决对策&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;一站多号：passwordmaker支持额外在密码的盐中混入用户名，更简单的方法是直接把用户名打在主密码里面即可&lt;/li&gt;
&lt;li&gt;同一个站点在不同的域名下有登录界面：固定最常用的那个域名，或者手工输入域名&lt;/li&gt;
&lt;li&gt;应用的密码没有对应域名：手动输入官网地址，或者干脆就输应用名字也行&lt;/li&gt;
&lt;li&gt;希望定时修改密码： 这可能是去中心唯一的缺点……但我真没见过能坚持定时修改各种小网站密码的人，反正我没这个需求。真的必须的话，可以定时更换主密码&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;国内的替身有花密，但既然都开源无中心了，也就没必要考虑国内了吧&lt;/p&gt;

&lt;p&gt;最后，&lt;strong&gt;不要用任何此类方法管理你的邮箱／网银／支付密码&lt;/strong&gt;。&lt;strong&gt;不要用任何此类方法管理你的邮箱／网银／支付密码&lt;/strong&gt;。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;题图：万智 【心灵操控】&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/2015-q1/m12-67.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The High Priestess &#34;女祭司&#34;</title>
      <link>http://inside.mcfog.wang/card/maj02/</link>
      <pubDate>Wed, 21 Jan 2015 14:18:31 CST</pubDate>
      
      <guid>http://inside.mcfog.wang/card/maj02/</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;&lt;strong&gt;The High Priestess &amp;ldquo;女祭司&amp;rdquo;&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;/img/tarot/big/maj02.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;关键词&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;稳定&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;不再参与&lt;/li&gt;
&lt;li&gt;让事情自然继续，不干涉&lt;/li&gt;
&lt;li&gt;接受影响&lt;/li&gt;
&lt;li&gt;保持镇定&lt;/li&gt;
&lt;li&gt;保持被动&lt;/li&gt;
&lt;li&gt;耐心等待&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;探查潜意识&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;使用直觉&lt;/li&gt;
&lt;li&gt;寻找内心的指引&lt;/li&gt;
&lt;li&gt;信任内心的呼唤&lt;/li&gt;
&lt;li&gt;对梦和想象保持开放&lt;/li&gt;
&lt;li&gt;了解某种更大的现实&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;看到潜力&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;理解可能性&lt;/li&gt;
&lt;li&gt;对可能保持开放&lt;/li&gt;
&lt;li&gt;发现你隐藏的才能&lt;/li&gt;
&lt;li&gt;允许发展&lt;/li&gt;
&lt;li&gt;让已有的东西繁荣&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;感到神秘&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;看穿表面现象&lt;/li&gt;
&lt;li&gt;接近被隔绝的区域&lt;/li&gt;
&lt;li&gt;迎接未知&lt;/li&gt;
&lt;li&gt;回忆某些重要的事情&lt;/li&gt;
&lt;li&gt;感到隐藏的秘密&lt;/li&gt;
&lt;li&gt;寻找被掩饰的东西&lt;/li&gt;
&lt;li&gt;承认暗影的存在&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;部分相反的牌&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Magician &amp;ldquo;魔术师&amp;rdquo;&lt;/strong&gt; - 有意识地行动，思索，已知，现象&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Two of Wands &amp;ldquo;权杖二&amp;rdquo;&lt;/strong&gt; - 冒失行动&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Seven of Wands &amp;ldquo;权杖七&amp;rdquo;&lt;/strong&gt; - 激进&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Eight of Wands &amp;ldquo;权杖八&amp;rdquo;&lt;/strong&gt; - 行动&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;部分呼应的牌&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Hermit &amp;ldquo;隐者&amp;rdquo;&lt;/strong&gt; - 探寻内心，撤回，寻求指引&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Hanged Man &amp;ldquo;倒吊男&amp;rdquo;&lt;/strong&gt; - 延迟行动，等待&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Four of Swords &amp;ldquo;宝剑四&amp;rdquo;&lt;/strong&gt; - 静养，深思熟虑&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;说明&lt;/h3&gt;

&lt;p&gt;女祭司是潜意识的守卫，在我们的思考和内心的交接之处，名为未曾发觉的薄幕之前，她静坐着，保守着来自那些领域的秘密，默默地向我们发出邀约：「你们要休息，要知道我是神」&lt;/p&gt;

&lt;p&gt;女祭司代表了阴性的力量，和魔术师所代表的阳性力量相对。阴性的原型在塔罗中被划分到女祭司和皇后两张牌上，女祭司体现了女性中神秘的未知的一面，尤其是在确凿和已知为主的文化之中。而皇后则更多代表在生活的历练中女性的角色。&lt;/p&gt;

&lt;p&gt;在解读中，女祭司要求你发现更深层次的东西，看穿表面现象，已知的事实，从而发现隐藏的，被淹没的东西。她也希望你回忆起你的广阔潜力，自身中蕴含的无限可能。有时女祭司意味着需要一时的等待，允许情况发展。并非只有行动才能让你达成你的心愿，有时，静静地等待和充分的时间才能让期待开花结果。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Magician &#34;魔术师&#34;</title>
      <link>http://inside.mcfog.wang/card/maj01/</link>
      <pubDate>Wed, 21 Jan 2015 14:16:04 CST</pubDate>
      
      <guid>http://inside.mcfog.wang/card/maj01/</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;&lt;strong&gt;The Magician &amp;ldquo;魔术师&amp;rdquo;&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;/img/tarot/big/maj01.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;关键词&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;主动&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;做应当完成的事&lt;/li&gt;
&lt;li&gt;发挥自己的潜力&lt;/li&gt;
&lt;li&gt;实现某种构想&lt;/li&gt;
&lt;li&gt;实践自己宣扬的&lt;/li&gt;
&lt;li&gt;实施计划&lt;/li&gt;
&lt;li&gt;产生神奇的结果&lt;/li&gt;
&lt;li&gt;发挥自己的才干&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;有意识地行动&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;知道自己的行为及其原因&lt;/li&gt;
&lt;li&gt;发现自己的动机&lt;/li&gt;
&lt;li&gt;理解自己的意图&lt;/li&gt;
&lt;li&gt;调查已知的情况&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;集中&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;－ 有专一的目的
  － 全力投入
  － 使用自己意志的力量
  － 感到自信
  － 不理睬干扰
  － 专注于一个目标&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;体验力量&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;给人留下深刻的影响&lt;/li&gt;
&lt;li&gt;具备生命力&lt;/li&gt;
&lt;li&gt;创造奇迹&lt;/li&gt;
&lt;li&gt;精力充沛&lt;/li&gt;
&lt;li&gt;活力十足&lt;/li&gt;
&lt;li&gt;充满创造性&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;部分相反的牌&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The High Priestess &amp;ldquo;女祭司&amp;rdquo;&lt;/strong&gt; - 非行为的，直觉，潜意识&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Hanged Man &amp;ldquo;倒吊男&amp;rdquo;&lt;/strong&gt; - 延迟，不作为&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Seven of Cups &amp;ldquo;圣杯七&amp;rdquo;&lt;/strong&gt; - 缺乏专注&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Four of Swords &amp;ldquo;宝剑四&amp;rdquo;&lt;/strong&gt; - 休息，积蓄力量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Eight of Swords &amp;ldquo;宝剑八&amp;rdquo;&lt;/strong&gt; - 困惑，无力，不确定&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;部分呼应的牌&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Chariot &amp;ldquo;战车&amp;rdquo;&lt;/strong&gt; - 专注，集中，力量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Two of Wands &amp;ldquo;权杖二&amp;rdquo;&lt;/strong&gt; - 个人能量，行使强硬的力量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Eight of Wands &amp;ldquo;权杖八&amp;rdquo;&lt;/strong&gt; - 快速反应，行动&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Eight of Pentacles &amp;ldquo;钱币八&amp;rdquo;&lt;/strong&gt; - 专注，集中&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;说明&lt;/h3&gt;

&lt;p&gt;魔术师是终极的成功者，主动、阳性力量的原型。他象征着开发世界的力量并将其应用于创造性的目的——因此而生的能量。注意他在图中的姿势——他像避雷针一般矗立着，一手高指向天，代表其无限灵感，另一手则指向大地以开发其无限潜能。他的意志帮助他完成各种奇迹，因而他的力量总是显得无比神奇。&lt;/p&gt;

&lt;p&gt;魔术师的强大力量源自何处？首先，他不害怕行动，他相信自己并愿意为此而冒险。同时，他了解自己的意图及其缘由。他准确地理解自己的情况，因而从不犹豫。他总能专注在单一的决心之中，只要还记得这种力量的本源，魔术师就永远能够实现奇迹。&lt;/p&gt;

&lt;p&gt;在解读中，魔术师暗示只要你信任自己的能量，主动并集中地行动，那么创造性的力量便会伴你左右。这张牌示意只要你理解你的意图和目标，那么就应当立刻行动起来。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Fool &#34;愚者&#34;</title>
      <link>http://inside.mcfog.wang/card/maj00/</link>
      <pubDate>Wed, 21 Jan 2015 14:05:14 CST</pubDate>
      
      <guid>http://inside.mcfog.wang/card/maj00/</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;&lt;strong&gt;The Fool &amp;ldquo;愚者&amp;rdquo;&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;/img/tarot/big/maj00.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;关键词&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;开始&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;进入一个新的阶段&lt;/li&gt;
&lt;li&gt;开辟新的路径&lt;/li&gt;
&lt;li&gt;扩展领域&lt;/li&gt;
&lt;li&gt;启动全新的事情&lt;/li&gt;
&lt;li&gt;开始一场冒险&lt;/li&gt;
&lt;li&gt;踏上新的旅程&lt;/li&gt;
&lt;li&gt;着手于未知&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;本能&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;活在当下&lt;/li&gt;
&lt;li&gt;不拘泥于预期&lt;/li&gt;
&lt;li&gt;做出乎预料的事&lt;/li&gt;
&lt;li&gt;冲动行为&lt;/li&gt;
&lt;li&gt;感觉无拘无束&lt;/li&gt;
&lt;li&gt;让他人吃惊&lt;/li&gt;
&lt;li&gt;感觉无忧无虑&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;自信&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;相信潮流&lt;/li&gt;
&lt;li&gt;保持开放&lt;/li&gt;
&lt;li&gt;不管担忧或恐惧&lt;/li&gt;
&lt;li&gt;感到被爱护&lt;/li&gt;
&lt;li&gt;过得愉悦&lt;/li&gt;
&lt;li&gt;恢复天真&lt;/li&gt;
&lt;li&gt;信任&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;愚蠢&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;接受自己的选择&lt;/li&gt;
&lt;li&gt;选择看似愚笨的方式&lt;/li&gt;
&lt;li&gt;追求白日梦&lt;/li&gt;
&lt;li&gt;保留自己真实的一面&lt;/li&gt;
&lt;li&gt;&amp;ldquo;疯狂&amp;rdquo;地放手一搏&lt;/li&gt;
&lt;li&gt;依照内心欲望行事&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;部分相反的牌&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Hierophant &amp;ldquo;教皇&amp;rdquo;&lt;/strong&gt; - 循规蹈矩&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Death &amp;ldquo;死亡&amp;rdquo;&lt;/strong&gt; - 终结&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Devil &amp;ldquo;恶魔&amp;rdquo;&lt;/strong&gt; - 猜疑&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Two of Swords &amp;ldquo;宝剑二&amp;rdquo;&lt;/strong&gt; - 拒绝体验，紧张，退缩&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Four of Pentacles &amp;ldquo;钱币四&amp;rdquo;&lt;/strong&gt; - 条理，规律&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;部分呼应的牌&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Hanged Man &amp;ldquo;倒吊男&amp;rdquo;&lt;/strong&gt; - 相信潮流，放弃挣扎&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Star &amp;ldquo;星辰&amp;rdquo;&lt;/strong&gt; - 信任，天真&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Judgement &amp;ldquo;审判&amp;rdquo;&lt;/strong&gt; - 重生，新的起点&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Three of Wands &amp;ldquo;权杖三&amp;rdquo;&lt;/strong&gt; - 扩展领域，探索未知&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;说明&lt;/h3&gt;

&lt;p&gt;作为第0张牌，愚者代表主牌的初始，在主牌之中显得有些与众不同。在中世纪的宫廷中，弄臣(小丑)作为规则破坏者，观察一切并以滑稽的形式讽刺一切。这构成了愚者充满惊喜而无法预测的力量。他提醒我们无限的潜力和自发的天性无所不在。这张牌带给我们一种任何事都会发生的感觉，没有完全确定的事或永恒正确的规则，愚者代表了全新以及未知的情况。&lt;/p&gt;

&lt;p&gt;愚者同时代表完全相信生活是美好且值得信赖的。有时候愚者显得过于天真，但正是这种天真促使他不停努力的同时，带给他欢愉。在解读中，愚者代表新的起点或者现有情况的改变，某种指引你走上新的冒险，新的奇迹，或是个人的成长的力量。他同时提醒你要相信自己的本能反应，尤其是你感到困惑或是面临选择的时候，愚者建议你相信自己，保持初心，无论这样的选择看上去显得多么愚蠢或者疯狂&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[乱弹塔罗][翻译]练习一 塔罗牌介绍</title>
      <link>http://inside.mcfog.wang/2015/01/tatarot-3/</link>
      <pubDate>Mon, 19 Jan 2015 13:25:59 CST</pubDate>
      
      <guid>http://inside.mcfog.wang/2015/01/tatarot-3/</guid>
      <description>

&lt;h2 id=&#34;toc_0&#34;&gt;练习一&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://inside.mcfog.wang/2015/01/tatarot-2/&#34;&gt;塔罗牌介绍&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;1.1 我信么？&lt;/h3&gt;

&lt;p&gt;回想第一课中呈现的理念，简短地记下现在你有多信塔罗牌，用百分比大致如下&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;0% = 我对塔罗牌的任何严肃用途都持怀疑态度，塔罗牌只是有趣而已&lt;/li&gt;
&lt;li&gt;100% = 我坚信塔罗牌能够带给我明确而个性化的指引&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;1.2 了解一张卡片&lt;/h3&gt;

&lt;p&gt;洗混你的塔罗牌，随意选择一张牌。仔细观察其图片一段时间，注意以下问题&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;这张图片上的场景是来自怎样的一个故事？&lt;/li&gt;
&lt;li&gt;我从图片中感受到了怎样的感情？&lt;/li&gt;
&lt;li&gt;图片上的哪些细节体现了这些感情／故事？&lt;/li&gt;
&lt;li&gt;这张牌总体情绪如何？&lt;/li&gt;
&lt;li&gt;我认为这张牌可能代表些什么？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当你想清楚以后，检查&lt;a href=&#34;http://www.learntarot.com/cards.htm&#34;&gt;单卡解释&lt;/a&gt;中相关的说明，和你的印象做个比较。不要害怕页面上的说明和你的印象有差异，这正说明你的直觉已经开始为你提供一些独特的见解！&lt;/p&gt;

&lt;p&gt;如果你愿意，你可以任意重复这个过程。&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;1.3 我在看似“随机”的事件中扮演了什么角色？&lt;/h3&gt;

&lt;p&gt;挑选一个你经历过的，某场无妄之灾或天降之喜。重新想想，列出你实际上促成该事件发生的行为。&lt;/p&gt;

&lt;p&gt;我在公寓中的打字机和相机曾经被偷过，我并没有请小偷上门，但我&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;确实租了方便的1楼房间&lt;/li&gt;
&lt;li&gt;确实随意乱放我的东西&lt;/li&gt;
&lt;li&gt;确实在一些昂贵的东西上花了大钱&lt;/li&gt;
&lt;li&gt;并没有安装防盗报警装置&lt;/li&gt;
&lt;li&gt;当我听到异响的时候，一般不会在意&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里列出了我做的和没做的选择，有的和盗窃有关，而有的还可能引发更大的问题，它们当中并没有“错误”的选择，只是它们对盗窃的最终发生都有或多或少的影响。&lt;/p&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;1.4 天之声&lt;/h3&gt;

&lt;p&gt;在图书馆或者书店进行这个练习。想一个你关心的问题，闭上眼睛，默默地暗示你的内心向导你正在寻求建议，请它告诉你你需要知道的东西。&lt;/p&gt;

&lt;p&gt;静下来以后，避免意识到自己的方位，在书架之中随意漫步。信任你的内心，当你觉得合适的时候，停下你的脚步，抽出一本书打开某一页。读完这一页之后，试图将其中内容和你的问题关联起来。你或许会发现里面的内容恰巧是你寻求的答案，而如果粗看之下并无关联，可以把它视为需要解析的暗号，寻找其深层的，细微的意义 —— 意义是如字面所示地无所不在的，只是你需要花时间找到它而已。&lt;/p&gt;

&lt;h3 id=&#34;toc_5&#34;&gt;1.5 梦想成真&lt;/h3&gt;

&lt;p&gt;晚上睡觉之前，取出一张二十元的钞票拿在手中，闭上眼睛，向内心请求告诉你这二十元应当如何用来帮助你或世界变得更好。（这二十元钞票象征着我们实现人生价值的意义）&lt;/p&gt;

&lt;p&gt;将钞票放在枕头下面，早上醒来后重复一次你的请求，然后带上这张钞票出门。注意如何使用它的征兆随时可能出现，当你感到猛然醒悟到的那一霎那便能认出这一征兆，小心不要错过那些细微的线索。如果第一天没有发生令你震惊的事，那么可以持续尝试一周左右的时间，给世界一个机会来响应你。不要忘了早晚的请求，你的信奉和决意很重要。&lt;/p&gt;

&lt;p&gt;稍后，想想这个过程中世界对你的暗示。生活会对你追求并坚信的东西做出回应，只是形式可能和你预想的完全不同。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;除了练习之外，顺带开始翻译单卡说明，这是本次完成的三张主牌的说明，前三张主牌说是塔罗牌的主基调也不为过。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/card/maj00/&#34;&gt;&lt;strong&gt;The Fool &amp;ldquo;愚者&amp;rdquo;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/card/maj01/&#34;&gt;&lt;strong&gt;The Magician &amp;ldquo;魔术师&amp;rdquo;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/card/maj02/&#34;&gt;&lt;strong&gt;The High Priestess &amp;ldquo;女祭司&amp;rdquo;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;题图：万智【清理书本】&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/2015-q1/m14-75.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>一己之见第三季 - 神奇的代码问题及其他</title>
      <link>http://inside.mcfog.wang/2015/01/ichizon-3/</link>
      <pubDate>Mon, 19 Jan 2015 12:37:15 CST</pubDate>
      
      <guid>http://inside.mcfog.wang/2015/01/ichizon-3/</guid>
      <description>

&lt;!--================================!--&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;大家写代码的时候，是不是大部分时间都费在了各种神奇的问题上&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://segmentfault.com/q/1010000001664019&#34;&gt;问题&lt;/a&gt; by &lt;a href=&#34;http://segmentfault.com/u/zhimengren&#34;&gt;xxx织梦者&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;各种突然&lt;br /&gt;
各种抽风&lt;br /&gt;
各种莫名其妙&lt;br /&gt;
各种小错误&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;我的看法&lt;/h2&gt;

&lt;p&gt;刚入门的时候非常正常，但如果已经在某个领域做了一段时间还一直维持这种状态那就有问题了。这很可能是&lt;a href=&#34;http://coolshell.cn/articles/2058.html&#34;&gt;所谓的撞大运／散弹枪编程&lt;/a&gt;的兆头。每次摆平某种抽风以后，务必总结问题和教训，做到下次从根本上防止再出现，能把你的代码写到让同事碰不到同样的问题更好（抽象、断言式编程／早崩溃、lint等等各种手段）&lt;/p&gt;

&lt;p&gt;反正我现在更多时间都花在吐槽同事的代码上，有机会面对全新领域的时候才有机会遇到所谓的抽风，莫名其妙，遇到的时候我也只有兴奋，没有无奈&lt;/p&gt;

&lt;!--================================!--&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;做服务器端开发需要具备什么样的基础知识？&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://segmentfault.com/q/1010000001589389&#34;&gt;问题&lt;/a&gt; by &lt;a href=&#34;http://segmentfault.com/u/ken_1&#34;&gt;ken&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;最近转服务端开发了，但是对知识的补充还是有些茫然，我个人列出一些需要补充和学习的知识，如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;基本的网络知识（TCP/IP , UDP , Socket等等）&lt;/li&gt;
&lt;li&gt;网络操作系统 Linux，有时候需要配置运行环境&lt;/li&gt;
&lt;li&gt;开发技术：php , python , 破儿（perl）, java（公司需要）, nodejs&lt;/li&gt;
&lt;li&gt;相关技术的积累：memcache , redis , mongodb&lt;/li&gt;
&lt;li&gt;数据库..&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;我列举的可能有的是多余的，也有遗漏的，请问各位有何看法？
还有网络的基础知识是否需要更佳深入的学习，比如七层模型，子网掩码的分配计算等等&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;我的看法&lt;/h2&gt;

&lt;p&gt;我觉得软件开发这个行当是&lt;strong&gt;工程性&lt;/strong&gt;很强的一个行当，这类行当的学习路径和&lt;strong&gt;学术研究性&lt;/strong&gt;的几乎相反：不是先学了一堆“基础知识” “背景知识” 之类的东西再深入研究，而是先从最高级最方便的quick&amp;amp;dirty way开始，向底层细化。&lt;/p&gt;

&lt;p&gt;按我说就先挑一门语言，然后选这门语言的前三流行的框架或开源应用中任意一款，先撸个hello world，再撸个博客出来，博客做完发布做评论，做完评论做用户，做完用户再看看你以前写的代码删光从头写起。当然把博客换成其他需求也行，只要自己需要用的都行&lt;/p&gt;

&lt;p&gt;至于需要的知识，压力大了自然要缓存，模块复杂了自然要解耦，上线次数多了自然要部署要自动化，一切知识都是以解决问题为导向的。没遇到问题就空学所谓基础知识，在我看来事倍功半。就好比题主提的“服务端开发”，其中也有很多细分，做业务逻辑的，高并发的，事务的，更别说做数挖的dba的devop的等等，又或是小业务的一条龙包干，都是相当不同的技能要求。&lt;/p&gt;

&lt;!--================================!--&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;Backbone model设计&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://segmentfault.com/q/1010000002492467&#34;&gt;问题&lt;/a&gt; by &lt;a href=&#34;http://segmentfault.com/u/gitbug&#34;&gt;gitbug&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;正在做一个对model增删改查的简单demo以学习backbone，现在的问题是model的表单不固定，需要根据model的类型动态变化。&lt;/p&gt;

&lt;p&gt;比如，添加一个人员，普通属性如 名称 邮箱 地址 都是通用的，但是当用户选择了行业（医疗、教育）等，表单需要根据这个类型进行调整。&lt;/p&gt;

&lt;p&gt;这种情况最简单的办法创建一个Person Model，把所有类型涉及到的attributes都塞到这里面，一个PersonFormView，绑定这个model，但select（行业）选择变化的时候，更新这个PersonFormView，这样的问题是：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Person放了太多不该放东西&lt;/li&gt;
&lt;li&gt;view的render方法需要大量的if else逻辑用来判断类型&lt;/li&gt;
&lt;li&gt;如果行业选择增多比如10个以上就egg pain了&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;按照普通的设计思路，普通用户Person应该作为基类，医疗用户，教育用户作为子类继承Person，View也类似，不同的子类负责不同的渲染。&lt;/p&gt;

&lt;p&gt;但是感觉这样子渲染的时候没思路，怎么破？&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;toc_5&#34;&gt;我的看法&lt;/h2&gt;

&lt;p&gt;首先整理问题，其实有两个问题：Model复杂（乃至嵌套）和View复杂（乃至嵌套）&lt;/p&gt;

&lt;p&gt;分开探讨&lt;/p&gt;

&lt;h3 id=&#34;toc_6&#34;&gt;Model问题&lt;/h3&gt;

&lt;p&gt;“对象部分字段结构随某个类型字段变化而变化”是个常见的需求，这种情况下，问题很可能已经超出backbone的范围，需要和后端程序、以及DB存储结构共通考虑。通常同步后端的设计思路设计Model是比较安全简便的方法。&lt;/p&gt;

&lt;p&gt;一般而言常见的解决方案有&lt;/p&gt;

&lt;h5 id=&#34;toc_7&#34;&gt;A. 单表，字段包涵每个类型可能的全部所需字段，当类型不需要某个字段时该字段留空值&lt;/h5&gt;

&lt;p&gt;这是最快最简单的方法，风险题主也提到了，类型增多，又或者是差异变大时比较痛苦，另外“不同类型的不同字段验证逻辑不同”也会造成痛苦&lt;/p&gt;

&lt;p&gt;如果类型不多，类型间字段差异不大时，可以选择这种方案，此时Backbone这层的Model不需要额外技术，照做即可&lt;/p&gt;

&lt;h5 id=&#34;toc_8&#34;&gt;B. 拆表，主表含共通字段和类型，类型相关的字段放在子表／扩展表中，每个类型一张不同的扩展表&lt;/h5&gt;

&lt;p&gt;这是扩展性最强的方法，和前一个方法恰好相反，类型少，差异不大的时候比较痛苦，而做类似“不同类型字段验证逻辑不通”之类的事情水到渠成。&lt;/p&gt;

&lt;p&gt;此时最应该有所谓的sub-model机制来对应后台的数据结构，在&lt;code&gt;parse&lt;/code&gt;或者&lt;code&gt;initialize&lt;/code&gt;的时候动手脚都应该可以实现，我没有具体实践过，建议搜索 &lt;code&gt;backbone nested model&lt;/code&gt;看看别人的做法&lt;/p&gt;

&lt;h5 id=&#34;toc_9&#34;&gt;C. 单表，一个“扩展字段”用类似JSON字符串的形式摆放所有的类型相关的数据，又或者是MongoDB类的文档数据库，直接一个字段搞定&lt;/h5&gt;

&lt;p&gt;这是前面两者的中间方案，也是最安全最不容易出大问题的，也是“罪孽”最深重的——复合字段，扩展字段是魔鬼！随着项目的迭代，它们理论上应该渐渐被修改为前两种方案，而实际上往往成了垃圾场，所有人都把东西往这儿一扔，更糟糕的是你还经常需要里面的东西，甚至对里面的内容筛选搜索&lt;/p&gt;

&lt;p&gt;但如果上述糟糕的事情没有发生，那么扩展字段是最有弹力的做法，此时backbone的model里面可以同样使扩展字段是复合值，复刻后台的数据结构，也可以用sub-model来描述扩展字段，加强结构性&lt;/p&gt;

&lt;h3 id=&#34;toc_10&#34;&gt;View的问题&lt;/h3&gt;

&lt;p&gt;实现的方式大致还是划分成拆不拆子View&lt;/p&gt;

&lt;h5 id=&#34;toc_11&#34;&gt;A. 拆子View（注意不是继承）&lt;/h5&gt;

&lt;p&gt;子View的实现有很多 backbone.layoutmanager基本专门做这个，其他几乎所有基于Backbone的框架都会涉及这一块，本质就是父View管理子View的创建、销毁，子View通过某种形式和父View通信（建议向上用事件冒泡，向下用方法调用）&lt;/p&gt;

&lt;p&gt;此时，每个类型特殊的字段对应一个子View，父View根据不同类型创建不同的子View插入合适位置，在类型变换的时候销毁原有的子View重新创建&lt;/p&gt;

&lt;h5 id=&#34;toc_12&#34;&gt;B. 不拆子View&lt;/h5&gt;

&lt;p&gt;不拆子View的最大问题就是渲染复杂，其次是数据收集复杂，这里建议用模版渲染来解决这个问题，关于这个方案建议参考我之前写的&lt;a href=&#34;http://press.mcfog.wang/2013/06/dsl-style-javascript/&#34;&gt;组织大表单应用中javascript代码的一种方法&lt;/a&gt; 后半部分，这里贴一下示意图&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://segmentfault.com/img/bVkCLx&#34; alt=&#34;templated-field.jpg&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;无论如何，大量if确实是需要避免的，核心思路就是根据不同类型选择不同的｛子View，子模版｝&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;最后，不建议选择类型作为子类继承父类，详细请搜索“组合优于继承”，这里不同行业的人从领域模型的角度来说或许是“医生” is-a &amp;ldquo;人&amp;rdquo;，但实现的时候用继承会很糟糕，比如再来个需要根据不同户口类型填不同的信息之类，直接傻眼。
更合适的拆分是“人” has-a “行业信息”，“医疗行业信息” is-a “行业信息”&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;这是我在 &lt;a href=&#34;http://segmentfault.com/&#34;&gt;SegmentFault&lt;/a&gt; 上的问题回答选编，遵循&lt;a href=&#34;http://creativecommons.org/licenses/by-sa/3.0/cn/&#34;&gt;CC BY-SA 3.0 CN&lt;/a&gt; 分享&lt;/p&gt;

&lt;p&gt;题图：万智【霰散弹】&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/2015-q1/ts160.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[新姿势]前端革命，革了再革：WebPack</title>
      <link>http://inside.mcfog.wang/2015/01/tech4fun-2/</link>
      <pubDate>Fri, 16 Jan 2015 11:30:42 CST</pubDate>
      
      <guid>http://inside.mcfog.wang/2015/01/tech4fun-2/</guid>
      <description>&lt;p&gt;时光回溯到2009年，CommonJS规范和NodeJS都还在襁褓之中，离Bower诞生还有三年时间，Ruby还统治着github，CoffeeScript在年末提交了第一个commit……&lt;/p&gt;

&lt;p&gt;备受加载顺序，依赖关系折磨的前端开发，开始站起来试图解决日益复杂的前端开发的种种问题，RequireJS降临了。如果说NodeJS吹响了JS全栈革命的号角，那么同时发生的前端模块化革命便是RequireJS的历史使命。&lt;/p&gt;

&lt;p&gt;五年过去了，RequireJS战胜了同级生LabJS，带起了中国小伙伴SeaJS。他完美地引领了前端模块化的革命，但今天看来，它有些过时了：它重浏览器端，轻打包编译，没有及时跟进包管理体系，almond没有成为标配而只是周边，配置晦涩……诞生太早的RequireJS，虽然一度成为了前端模块化的某种程度上的事实标准，但难掩其缺点。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;五年间，NodeJS成为了服务端以及脚本工具的一代翘楚，NPM的成功让大家意识到一个集中式的依赖／包管理体系的重要性，Bower应运而生，还有试图将CMD和NPM包带到前端领域，统一前后端包格式的Browserify等等，大量的前端工具爆发式地出现，WebPack是其中的(又)一款模块打包工具。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/2015-q1/webpack.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;webpack的优势一言难尽，相比其他竞争者，他的好处有&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;模块来源广泛，支持包括npm/bower等等的各种主流模块安装／依赖解决方案&lt;/li&gt;
&lt;li&gt;模块规范支持全面，amd/cmd以及shimming等一应具全&lt;/li&gt;
&lt;li&gt;浏览器端足迹小，移动端友好，却对热加载乃至热替换有很好的支持&lt;/li&gt;
&lt;li&gt;插件机制完善，实现本身实现同样模块化，容易扩展&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;但其最大的特点是“用着舒服，不折腾”，这是一款工具最难能可贵的优点。&lt;/p&gt;

&lt;p&gt;webpack官网&lt;br /&gt;
&lt;a href=&#34;http://webpack.github.io/&#34;&gt;http://webpack.github.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;我的前端技术栈scaffold （bower+webpack+less+gulp）&lt;br /&gt;
&lt;a href=&#34;https://github.com/mcfog/glimmervoid&#34;&gt;https://github.com/mcfog/glimmervoid&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[乱弹塔罗][翻译]第一课 塔罗牌介绍</title>
      <link>http://inside.mcfog.wang/2015/01/tatarot-2/</link>
      <pubDate>Wed, 14 Jan 2015 11:30:00 CST</pubDate>
      
      <guid>http://inside.mcfog.wang/2015/01/tatarot-2/</guid>
      <description>&lt;p&gt;多年前，我告诉我兄弟我在研究塔罗牌，他说“一副纸牌怎么可能告诉你哪怕任何一点有用的东西?” 我笑了，他的回复代表了大众对塔罗牌的看法。而我也同样对塔罗牌抱着怀疑，但后来我发现它确实可以以一种不同的角度帮你察觉、理解和面对人生中的挑战。在这篇介绍中，我会尝试解释其中原因。&lt;/p&gt;

&lt;p&gt;塔罗牌的起源是个谜。在十五世纪，塔罗牌作为一种纸牌游戏在意大利流行。富人们钟情于漂亮的纸牌，其中有一些得以存续至今。1450年代前后的&lt;a href=&#34;http://en.wikipedia.org/wiki/Visconti-Sforza_tarot_deck&#34;&gt;Visconti-Sforza塔罗牌&lt;/a&gt;就是其中最早最完整的塔罗牌组之一。&lt;/p&gt;

&lt;p&gt;到了十八十九世纪，部分颇具影响力的神秘学家发现了这种纸牌。他们被塔罗牌吸引，认为牌面上的图像蕴含的强大力量远非普通游戏可比。他们将塔罗牌与埃及神话、赫耳墨斯主义、卡巴拉、炼金术以及其他各种神秘学体系联系起来。这种潮流一直持续到二十世纪上半叶，塔罗牌开始被纳入一些秘密结社的实践之中，其中包含了黄金黎明协会。&lt;/p&gt;

&lt;p&gt;即使塔罗牌源自于传统迷信，近年来对塔罗牌的研究和兴趣不断延伸到大量不同的领域。新的牌组也不断被创造，诸如印第安塔罗、草药塔罗、巨龙塔罗、浮世绘塔罗等等各种不同的塔罗印证了塔罗牌的发展。&lt;/p&gt;

&lt;p&gt;塔罗牌通常被视为占卜工具。传统的塔罗解读由一个了解如何解读卡牌的
读牌者和一个探求某些个人问题的答案的求卦人进行。求卦人洗混牌组并切牌后，读牌者将选定的牌按照被陈为“牌阵”的模式放置。牌阵中的每个位置以及每张牌都有各自的含义，读牌者结合这些含义为求卦人的问题提供解答。&lt;/p&gt;

&lt;p&gt;这样一个简单的过程却一直被有意夸大，我们经常在电影中见到类似的场景：一个破旧的小房间中，一个老婆婆坐在阴影中给一个紧张的女孩占卜。老婆婆用她布满皱纹的手翻开一张不详的&lt;strong&gt;Death &amp;ldquo;死亡&amp;rdquo;&lt;/strong&gt;，女孩瘫倒在椅子中，惊恐地看着这代表迫近她的灾厄的牌。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/2015-q1/maj13s.gif&#34; alt=&#34;Death&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;这种阴暗的印象至今伴随着塔罗牌，一些迷信者将塔罗牌视为禁忌，而一些科学机构将塔罗牌视为非理性的象征，视为愚昧无知的过去的遗物。让我们抛弃这些成见，将塔罗牌视作塔罗牌本身 —— 一组带图画的纸牌。那么问题变成了：塔罗牌到底有什么用？&lt;/p&gt;

&lt;p&gt;答案关乎潜意识——平日难以察觉，却潜藏于每个人心底的深层记忆和意识。即使多数时间我们忽视潜意识的活动，它仍然深深地影响我们的作为。弗洛伊德在他的文字中，强调了潜意识非理性而原始的一面，他认为我们最不可接受的那些欲望和冲动是来自潜意识。同时代的卡尔·荣格则强调潜意识中积极、创造性的一面，他试图展示潜意识中的一些共同部分接触到了万物的本质。&lt;/p&gt;

&lt;p&gt;我们可能永远无法了解潜意识的完整范围和全部力量，但探索其奥秘的方法确实存在。很多技术为此目的诞生，诸如心理治疗、解梦和冥想等，而塔罗牌是另一种类似的工具。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/2015-q1/s5s.gif&#34; alt=&#34;Five of Swords&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;凝视塔罗牌中的一张&lt;strong&gt;Five of Swords &amp;ldquo;宝剑之五&amp;rdquo;&lt;/strong&gt;，这张牌展示了拿着三把宝剑的一个男人看着远方的另外两人，而地上有另两支宝剑。我看到这张牌的时候，便会尝试围绕这张图片展开想象：我看到了一个似乎打了胜仗的男人满足地笑着，他拥有所有宝剑，看上去喜气洋洋的，而另外两人则垂头丧气，似乎是被打败了。&lt;/p&gt;

&lt;p&gt;我刚在进行的是一次开放性的想象，并将其描述成一个故事，对我来说，我看到的明显就是这个，唯一的对图片上的场景的解释。但实际上，其他人很可能有完全不同的故事，比如这个男人正在收拾，他招呼其他两人帮忙捡起宝剑，却被另两人拒绝了；又或者是另外两人原本在战斗，而这个男人说服了他们放下武器。&lt;/p&gt;

&lt;p&gt;关键点在于，在所有可能的各种故事中，我为何偏偏选择了我自己的那个版本？将自己潜意识中的部分投射到环境中的对象上是人类的天性，我们总是透过以我们自身状态构成的透镜来观察世间万物。心理治疗师很早就发现了这种倾向，并创造了辅助这种过程的工具，诸如著名的罗夏克墨渍测验。&lt;/p&gt;

&lt;p&gt;这种投射过程是塔罗牌有价值的原因之一。牌上的景象和图案有助于我们开发潜意识，这是塔罗牌的个性的一面。塔罗牌也有反应所有人共性的另一面：作为人类，我们有着一些共通的诉求和体验，塔罗牌上的图片刻画了这些共通的情感，将它们的共性提取出来。塔罗牌代表了人性的原型，因此人们倾向于对牌表现出相似的反应。经过一代代的演化，塔罗牌已经成为人类思想和情感最基本的模式的一个集合。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/2015-q1/maj03s.gif&#34; alt=&#34;The Empress&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;凝视这张&lt;strong&gt;The Empress &amp;ldquo;皇后&amp;rdquo;&lt;/strong&gt;，她代表了母性的力量，富足的生活。注意图片是如何体现出这种充裕、华丽的感觉的：她穿着华美长袍，坐在柔软、豪华的垫子上。我们感受到了慷慨和充满感性的自然。&lt;/p&gt;

&lt;p&gt;塔罗牌的力量源自个性和普遍性的结合。你以你的视角来看每张牌，但同时，这些牌又来自于他人认为有价值的那些理解。塔罗牌是将你独一无二的意识中隐藏部分映射出来的一面镜子。&lt;/p&gt;

&lt;p&gt;当我们进行塔罗解读时，我们通过洗牌、切牌来选择了一些牌，这看上去是随机的，我们却认为这些牌是有意义的。选择我们应当看到的牌是塔罗解读的基本要点，而常理似乎告诉我们随便选的几张牌不可能有任何的特殊含义，不是么？&lt;/p&gt;

&lt;p&gt;为了回答这个问题，让我们仔细审视“随机性”。通常我们说一个事件是随机的，是指它是若干机械性力量的偶然互动的结果，在若干相同可能的结果中，某一个发生了，没有特别的原因和意味。&lt;/p&gt;

&lt;p&gt;这涉及到两个关键点：无意识的机械力量和无特别含义的结果。首先，没有任何一次塔罗解读是无意识的结果。它是一连串有意为之的结果，首先我们决定研究塔罗牌，我们购买了一套牌组，学习如何使用它，然后我们在一个特定的时间按照某种方式洗牌、切牌，最后我们用自己的感觉来解释这些牌。&lt;/p&gt;

&lt;p&gt;这每一个步骤我们都主动参与，那我们为何会认为这结果是随机，是“机械性力量的偶然互动的结果”？ 可能因为我们无法解释我们的主观意识如何影响了结果，我们认为我们选择的这些牌并非故意为之，因而我们称之为随机。那么实际上，是否有某种与我们潜意识之中的力量关联的未知机制存在并左右其结果？我们的内在力量能否通过某些我们并不完全理解的方式影响外部的事件？我把这些疑问留给你自行解读。&lt;/p&gt;

&lt;p&gt;随机事件的另一个特征是其并不具备意义。我掷骰子掷出一个六，但这并没有内在意义，我很有可能掷出的是一而非六，但这和掷出六来并没有什么区别。我们并不总能发现事物的意义，但实际上，或许所有事情都或多或少有其意义。&lt;/p&gt;

&lt;p&gt;多年前的一场派对上，我突然捡起地上的一个骰子，我非常确信我会用这个骰子连续掷出每个数字。我开始掷骰子的同时，派对的喧嚣渐渐淡去，我不断掷出不重复的数字，越来越兴奋，直到最后一掷成功以后才回过神来。我回到自己的位置上，无法理解究竟发生了什么。&lt;/p&gt;

&lt;p&gt;某种角度来说，这六次掷骰是互相独立的随机事件，然而另一方面，它们是很有意义的。即使旁观者可能不能认同，但我的内心告诉我这是很有意义的。当时，它成了我理解精神和物质的奇妙互动的一节课，而今天，我得知它还有另外一层意义——25年后，这成了本次课程的一个绝佳例证！&lt;/p&gt;

&lt;p&gt;意义是内在与外在真实交界处的神秘性质。树木、歌谣乃至垃圾，任何事物都具备某些信息，但只有我们开放内心去体会它们时才能察觉到它。塔罗牌丰富的图像和联系携带了大量的信息。更为重要的是，我们真诚地希望能发现生活中深层的真理，并将这希望寄托于塔罗牌，塔罗牌因而能够表达出意义。通过这种形式来追寻意义，我们尊重它的本质并试图揭示它。&lt;/p&gt;

&lt;p&gt;如果塔罗牌解读中存在意义，那么其究竟来自何处？我相信埋藏于我们自身内心的某些部分能够察觉到上天的启示，从而带来塔罗解读的意义。这是潜意识的一种体现，同时也能扮演一个最了解我们自己的明智的顾问。它理解我们的诉求，并引导我们找到应该前进的方向。有的人把这位顾问称为灵魂，超意识或高我(Higher Self)。这里我称之为内心向导，这描述了它在我们和塔罗牌交互中起到的作用。&lt;/p&gt;

&lt;p&gt;内心向导作为我们每个人心中意义的源泉，作为每个人本身的一部分，总是陪伴着你。你无法摧毁它，但你会忽略它。当你向塔罗牌寻求答案时，你向你的内心向导发出信号，表示你希望接受它的智慧。这行为本身便成为一种信念，让你得以发现内心向导，接受其指导。&lt;/p&gt;

&lt;p&gt;我们的天性原本依赖于内心向导的智慧，只是不知怎地渐渐忘记了如何找到它。于是我们开始信任我们的主观意识，而忘记关注更深层次的东西。我们的表层意识确实聪明，但可惜其并不具备我们所需的，让我们每天做出恰当选择的，完整的认知。&lt;/p&gt;

&lt;p&gt;当我们以表层意识驱动生活，我们发现事情总是偶然、莫名地发生，生活似乎缺乏目的，而我们并不清楚我们是怎样一种存在，又究竟需要什么东西，这令我们十分痛苦。而当我们掌握了如何找到并依赖我们的内心向导之后，生活会变得不同：我们的内在追求和表层意识保持一致，从而带来坚定和安宁。我们的努力变得愉悦，我们更清楚地了解如何整合生活中支离破碎的各种事情来实现我们的天命。&lt;/p&gt;

&lt;p&gt;我选择了塔罗牌，因为它是我能找到的用来探寻我们内心向导的耳语声的最佳工具。在解读中，塔罗牌的概念、图像和情感融合成了来自我内心向导的消息，或许我无法证明这不是我的妄想，我只能相信我的经验，并等着看看后来事情如何发展。&lt;/p&gt;

&lt;p&gt;其实探寻内心向导并非必需塔罗牌不可，塔罗牌能起到的作用和小象丹波的魔法羽毛是一样的。在迪士尼电影《小飞象》中，小象丹波无法相信自己能飞，于是他用鼻子抓紧一根魔法羽毛，坚信这这根羽毛赋予他飞行的能力。最终当羽毛被吹走，丹波终于凭自己的力量飞了起来。&lt;/p&gt;

&lt;p&gt;塔罗牌或许也能助你飞行，直到你发现凭自己的力量其实也能找到你的内心向导。目前来说，不用在意这如何得以实现，找来套牌，继续这个系列的课程和联系，看看你能否体验到某些惊奇。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;翻译自我了解塔罗的入门站点 &lt;a href=&#34;http://www.learntarot.com/less1.htm&#34;&gt;http://www.learntarot.com/less1.htm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;网上也有各种翻译版本，但我觉得并不够好，大多也没有完整翻译全部内容，那么正好借此机会慢慢自己将其翻译并温习一遍也是不错的。&lt;/p&gt;

&lt;p&gt;第一课可能是最重要也是最长的一篇，内容太多因而我把配套的练习留到下次了&lt;/p&gt;

&lt;p&gt;题图：迪斯尼《小飞象》海报
&lt;img src=&#34;/img/2015-q1/dumbo.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>mcfog的一己之见2</title>
      <link>http://inside.mcfog.wang/2015/01/ichizon-2/</link>
      <pubDate>Sun, 11 Jan 2015 14:05:12 CST</pubDate>
      
      <guid>http://inside.mcfog.wang/2015/01/ichizon-2/</guid>
      <description>

&lt;!--================================!--&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;问英语在编程当中的重要程度&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://segmentfault.com/q/1010000000698980&#34;&gt;问题&lt;/a&gt; by &lt;a href=&#34;http://segmentfault.com/u/gtg&#34;&gt;光头哥&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在与同事群友交流当中发现英文讲不出几个，但是却经常逛英文的社区，分享国外的博客和资讯。
但是我英文不会几个 好像感觉问题也不大。。。&lt;/p&gt;

&lt;p&gt;所以我不禁想问了，挖掘机技术。。。。。&lt;/p&gt;

&lt;p&gt;不对  - -&lt;/p&gt;

&lt;p&gt;是学习英语在IT行业和编程当中分别到底有多重要，你们会经常逛国外的技术网站之类的吗&lt;/p&gt;

&lt;p&gt;能举例说明最好&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;我的看法&lt;/h2&gt;

&lt;p&gt;差不多的意思我就不重复了，我想说的是两点&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;关于口语&lt;/h3&gt;

&lt;p&gt;口语也非常重要！或者说，对自己的口语水平或者至少提升口语水平的决心有信心非常重要&lt;/p&gt;

&lt;p&gt;工作三年多来，我发现不少同事的共同特点就是英文口语不好或对自己的口语不好没有信心，在他们工作生活里的场景大概是这样的&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;XXX，那个计算&lt;del&gt;挖掘机技术哪家强&lt;/del&gt;的方法在哪里定义的？ &lt;code&gt;@＃＊&amp;amp;&lt;/code&gt;  （？咦？听不懂）啥？&lt;/li&gt;
&lt;li&gt;&lt;code&gt;那个@＃&amp;amp;¥＊方法的参数应该传什么?&lt;/code&gt; 哪个方法？ &lt;code&gt;就是@＃＊&amp;amp;¥类的@＃&amp;amp;¥＊方法啊&lt;/code&gt;  嗯？&lt;/li&gt;
&lt;li&gt;慢慢的这种交流不畅开始反馈到他们的代码中，牛头不对马嘴的命名、拼音命名、abcxyz命名开始出现……&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;其实这都赶不上“英语口语”的程度，不过就是念方法名变量名和几个术语的发音标准而已罢了，但我觉得这非常影响到程序员能力的提升： &lt;strong&gt;如切如磋，如琢如磨&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;关于中文文档&lt;/h3&gt;

&lt;p&gt;我个人的体会是：越是中文资料多的技术领域，英文，或者说坚定地找英文资料越重要。总结下来中文文{档，章}的问题有&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;准确程度成疑问，翻译不是万能的，甚至有时一些暧昧的表达可能都无法翻译（关于架构、编程思想的文章中可能多一些）&lt;/li&gt;
&lt;li&gt;及时性成疑问，在迭代快速的iOS、Android、NodeJS、Ruby等领域，中文译者根本跟不上技术发展的速度&lt;/li&gt;
&lt;li&gt;数量被碾轧，还难以搜索。中文的特点是表达方式多样，对搜索引擎的挑战很大，很多时候一件事情有多种非常不同的表达方式，搜索引擎无法很好的处理这些场景。&lt;/li&gt;
&lt;li&gt;中文天生逻辑性或者说和代码的相似性远远不及英文，英文的解决方案基本上缩写一下可能就是伪代码，整理一下就是实际代码，而中文描述到代码之间差距巨大&lt;/li&gt;
&lt;li&gt;英文这种不需要编译解释，不会报语法错误或是segmentation fault的语言你都掌握不了，那你凭什么能掌握好别的编程语言呢？ treat english as another programming language&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;口碑好一些的翻译技术书籍可能还好，平时上网搜索问题或者查文档什么的&lt;strong&gt;千万不要看中文的东西&lt;/strong&gt;，多花在英文学习、理解上的每一秒，都会对你的技术成长带来莫大的好处；偷懒看中文资料的每一次，都会在将来默默地坑你一百遍啊一百遍&lt;/p&gt;

&lt;hr /&gt;

&lt;!--================================!--&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;编程基础_迭代和遍历各是什么概念？二者区别和联系是什么？&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://segmentfault.com/q/1010000002434267&#34;&gt;问题&lt;/a&gt; by &lt;a href=&#34;http://segmentfault.com/u/yanwushu&#34;&gt;yanwushu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;笔者编程水平还处于初级阶段，平时使用列表的时候经常用到遍历
比如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    //java
    for(int i = 0 ; i &amp;lt; 100 ; i ++){
        System.out.println(i);
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;也用到过迭代
比如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    //java
    List&amp;lt;String&amp;gt; list = new List&amp;lt;String&amp;gt;(){&amp;quot;a&amp;quot; , &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;};
    for(String str : list){
        System.out.println(str);
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但是一直对迭代和遍历这两个概念理解很模糊，没有一个明确的概念。
烦请了解此问题的同志们&lt;/p&gt;

&lt;p&gt;1.对迭代和遍历下一个比较明确的定义，定义中应该包含他们各自的特性。
2.比较下他们的关系、区别（当然，如果定义足够明确，二者的差异也就自己出来了）。&lt;/p&gt;

&lt;p&gt;感激不尽&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;toc_5&#34;&gt;我的看法&lt;/h2&gt;

&lt;p&gt;抠字眼的时候请多用英文&lt;/p&gt;

&lt;p&gt;遍历 ~ Traverse 访问一个集合(广义)的每个元素
迭代 ~ Iterate 反复调用同一个过程最终达成目的，这个过程如果是一个函数，那就是递归，如果是一个循环体，那就是狭义上的迭代。递归和迭代之间的关系、转换、优化等等又是另一个故事了。&lt;/p&gt;

&lt;p&gt;总之遍历是&lt;strong&gt;目的&lt;/strong&gt;，迭代是&lt;strong&gt;手段&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;!--================================!--&gt;

&lt;h2 id=&#34;toc_6&#34;&gt;谈谈你对各种编程语言的看法&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://segmentfault.com/q/1010000000727790&#34;&gt;问题&lt;/a&gt; by &lt;a href=&#34;http://segmentfault.com/u/yanwushu&#34;&gt;yanwushu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;笔者只用过java和C#，js只是看了点皮毛。对于ruby，python，go，lisp等网络上常见的语言一窍不通。并且，限制于个人能力，对java和C#的认识也并没有很深刻。&lt;/p&gt;

&lt;p&gt;想请对编程比较有功底的同志说说自己对各种语言的理解，包括他们的优劣。发表观点时，请尽量具体。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;toc_7&#34;&gt;我的看法&lt;/h2&gt;

&lt;h3 id=&#34;toc_8&#34;&gt;Lisp（系）&lt;/h3&gt;

&lt;p&gt;各种思想的老祖宗。据说越像lisp的语言越牛逼（误）
学术价值宇宙第一，实用价值较低，不明觉厉&lt;/p&gt;

&lt;h3 id=&#34;toc_9&#34;&gt;C&lt;/h3&gt;

&lt;p&gt;可以做任何用处，但最大的用处还是写写操作系统和编译器之类的，一般人用起来只能添乱。重剑无锋，大巧不工&lt;/p&gt;

&lt;p&gt;工程性0，lisp度0，底层亲和型100%&lt;/p&gt;

&lt;p&gt;宇宙主流语言中年纪最大的语言&lt;/p&gt;

&lt;h3 id=&#34;toc_10&#34;&gt;C++&lt;/h3&gt;

&lt;p&gt;为了让一般人也有饭吃，从C衍生的变种。写C需要一群高手，但C++只要一个高手把架子搭稳，一般市民也能写代码啦。写代码能谈得上是“工程”了
问题是搭架子的人如果水平不够，或者一般市民不听那个人的，那也是一场灾难。&lt;/p&gt;

&lt;p&gt;宇宙中特性最多的语言&lt;/p&gt;

&lt;h3 id=&#34;toc_11&#34;&gt;Java&lt;/h3&gt;

&lt;p&gt;为了让半瓶水也能搭出能用的架子，工程性点到满还有些溢出，派生出了邪教“设计模式真理教”“OO拯救世界教”“全家都是接口党”等
由于邪教干扰，老东家不利索，新东家坑爹等等天灾人祸，原本应当更伟大的全领域语言在桌面GUI方面只有IDE方面所向披靡，服务端方面只有企业应用半壁江山。所幸天无绝人之路，老乡的谷哥把认他为义子，放进了安卓中，顿时前景又光明了起来&lt;/p&gt;

&lt;p&gt;宇宙中最适合煮咖啡的语言&lt;/p&gt;

&lt;h3 id=&#34;toc_12&#34;&gt;ObjC&lt;/h3&gt;

&lt;p&gt;不怎么了解，展示了肾教淫威的语言
但从语言角度来说，完全躺在一个干爹怀里是很不好的征兆&lt;/p&gt;

&lt;p&gt;宇宙中开发环境最贵的语言&lt;/p&gt;

&lt;h3 id=&#34;toc_13&#34;&gt;Python&lt;/h3&gt;

&lt;p&gt;大法好。独树一帜的语法，巧妙的设计，文武双全。小可以随手作脚本，大可以承载大型工程。漂亮的数据结构和模块系统。
可惜版本分裂得厉害，进入3以后就没有以后了&lt;/p&gt;

&lt;p&gt;宇宙中最关心空格的语言&lt;/p&gt;

&lt;h3 id=&#34;toc_14&#34;&gt;Ruby&lt;/h3&gt;

&lt;p&gt;小清新。独树另一帜的语法，另一种巧妙的设计。据说实现需求速度飞快。
magic就是那种看上去无比优雅风骚性感，实际工业开发的时候发现千人千面，难以查错难以维护的风格，ruby以此为荣，所以我觉得始终摆脱不了玩具语言
不得不提到的是gem体系引领了第一波github的狂欢&lt;/p&gt;

&lt;p&gt;宇宙中名字最高贵的语言&lt;/p&gt;

&lt;h3 id=&#34;toc_15&#34;&gt;Javascript&lt;/h3&gt;

&lt;p&gt;平淡无奇的语法中蕴含了不亚于ruby的“Lisp度”或者说元编程能力，但没人能想到真正使Javascript爆发的是原因来自于他non-block的天性。这个为异步而生的语言被Node选中，成为了完美的异步服务端脚本语言。
没有namespace的JS通过“每个库把自己的依赖库重复装在自己目录里”的方式，暴力解决了依赖冲突的千古问题。然后又恰逢HTML5迎面而来，于是天时地利人和，顺势成为社区最火的语言，github trending保持占领一半位置
不过没逃过“灵活”的语言的通病：难以调试、维护、查错。需要lead programmer严格把控整体风格。&lt;/p&gt;

&lt;p&gt;宇宙中“我会JS”涵义最丰富的语言&lt;/p&gt;

&lt;h3 id=&#34;toc_16&#34;&gt;PHP&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;全宇宙最好的语言&lt;/strong&gt;
主流语言中唯一主动聚焦于单个场景的语言。“克制”是PHP语言设计的不二法门，早年主要参照C和Perl，有限地借鉴perl的特性，没有让整个语言都“动态掉”，5.0后开始注重工程性，大致借鉴Java，也是一步一个脚印，慢慢地借鉴，抄一行，停下来改自己三行，融会贯通以后再继续抄。
于是现在的PHP恰好站在一个非常平衡的位置，同时兼具一定的动态能力和较高的工程性，动如Laravel让人感叹RoR再世，静如Symfony、ZF让人以为回到了Java的世界。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;这是我在 &lt;a href=&#34;http://segmentfault.com/&#34;&gt;SegmentFault&lt;/a&gt; 上的问题回答选编，遵循&lt;a href=&#34;http://creativecommons.org/licenses/by-sa/3.0/cn/&#34;&gt;CC BY-SA 3.0 CN&lt;/a&gt; 分享&lt;/p&gt;

&lt;p&gt;题图：万智【封口】&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/2015-q1/m14-35.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[新姿势]我用过的静态站点生成器们</title>
      <link>http://inside.mcfog.wang/2015/01/tech4fun-1/</link>
      <pubDate>Fri, 09 Jan 2015 13:26:52 CST</pubDate>
      
      <guid>http://inside.mcfog.wang/2015/01/tech4fun-1/</guid>
      <description>

&lt;p&gt;随着诸如github pages的静态托管服务，静态站点生成器在近年有了极大的发展，静态生成+托管对托管环境要求低、维护简单、可配合版本控制，但又灵活多变，在程序员和geek群体中大有超越WordPress等动态博客程序的势头&lt;/p&gt;

&lt;p&gt;近年来个人也好项目也好，我也经常要用到静态生成器，这里把我玩过的静态生成器挨个做个简评&lt;/p&gt;

&lt;p&gt;&lt;em&gt;才、才不是什么玩博客程序的时间超过了写博客的时间呢&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;toc_0&#34;&gt;Jekyll / OctoPress&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;和&lt;a href=&#34;http://octopress.org/&#34;&gt;OctoPress&lt;/a&gt;是最流行的静态博客系统。OctoPress是基于Jekyll的扩展，进一步方便了写作。&lt;/p&gt;

&lt;p&gt;在主题、插件数量上和wordpress一样对竞争对手有压倒性优势。上手简单，周边工具丰富。&lt;/p&gt;

&lt;p&gt;推荐给想更多把时间花在写字而不是折腾博客的人。&lt;/p&gt;

&lt;p&gt;缺点主要是文章量大的时候生成速度慢。&lt;/p&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;Hexo&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://hexo.io/&#34;&gt;Hexo&lt;/a&gt;是NodeJS编写的静态博客系统，其生成速度快，主题数量相对也比较丰富。是OctoPress的优秀替代者。&lt;/p&gt;

&lt;p&gt;另外由于Node社区丰富的“方言”，写主题时天然有Jade/Stylus/Less等各种方言支持。&lt;/p&gt;

&lt;p&gt;推荐给希望生成速度快，主要写博客的人&lt;/p&gt;

&lt;p&gt;我用Hexo来写我的技术博客 &lt;a href=&#34;http://press.mcfog.wang/&#34;&gt;http://press.mcfog.wang/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;Sculpin&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://sculpin.io/&#34;&gt;Sculpin&lt;/a&gt;是PHP的静态站点系统。Hexo和Octopress专注于博客，而有时候我们的需求不仅仅是博客，而是有类似CMS的页面生成需求。Sculpin是一个泛用途的静态站点生成系统，在支持博客常见的分页、分类tag等同时，也能较好地支持非博客的一般页面生成。
但Sculpin没有主题功能，没有严格分离内容和模版，第三方提供的现成模版也很少。&lt;/p&gt;

&lt;p&gt;推荐给没有主题需求，希望自己写页面，且需要博客之外的页面内容的人&lt;/p&gt;

&lt;p&gt;缺点是生成速度一般，第三方扩展少&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;Hugo&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;是GO语言编写的静态站点系统。其生成速度快，且在较好支持博客和非博客内容的同时提供了比较完备的主题系统。无论是自己写主题还是套用别人的主题都比较顺手。&lt;/p&gt;

&lt;p&gt;推荐给重视生成速度且希望具备一定的灵活性的人&lt;/p&gt;

&lt;p&gt;缺点是至今分页功能还没官方发布（还在下个release，有非官方的方案）&lt;/p&gt;

&lt;p&gt;这是本站&lt;a href=&#34;http://inside.mcfog.wang/&#34;&gt;http://inside.mcfog.wang/&lt;/a&gt;的生成器&lt;/p&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;总结&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;语言&lt;/th&gt;
&lt;th&gt;活跃度&lt;/th&gt;
&lt;th&gt;开箱即用&lt;/th&gt;
&lt;th&gt;主题数量&lt;/th&gt;
&lt;th&gt;主题系统&lt;/th&gt;
&lt;th&gt;生成速度&lt;/th&gt;
&lt;th&gt;博客适应性&lt;/th&gt;
&lt;th&gt;非博客适应性&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Jekyll&lt;/td&gt;
&lt;td&gt;Ruby&lt;/td&gt;
&lt;td&gt;S&lt;/td&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;OctoPress&lt;/td&gt;
&lt;td&gt;Ruby&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;S&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Hexo&lt;/td&gt;
&lt;td&gt;NodeJS&lt;/td&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Sculpin&lt;/td&gt;
&lt;td&gt;PHP&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Hugo&lt;/td&gt;
&lt;td&gt;GO&lt;/td&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;S&lt;/td&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;最后推荐一个静态站点生成器的统计列表 &lt;a href=&#34;https://staticsitegenerators.net&#34;&gt;https://staticsitegenerators.net&lt;/a&gt;，有机会准备玩玩&lt;a href=&#34;http://metalsmith.io&#34;&gt;http://metalsmith.io&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;题图：万智《Generator Servant》电机仆役&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/2015-q1/m15-143.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[乱谈塔罗]牌阵解读:坚持写博客</title>
      <link>http://inside.mcfog.wang/2015/01/tatarot-1/</link>
      <pubDate>Mon, 05 Jan 2015 12:30:58 CST</pubDate>
      
      <guid>http://inside.mcfog.wang/2015/01/tatarot-1/</guid>
      <description>

&lt;p&gt;嗯，计划中的每周三会有一篇关于塔罗的文章，那么来一发关于“坚持写博客”这事儿本身的牌阵自然是个好的开始&lt;/p&gt;

&lt;p&gt;牌阵方面选择了一个缩减到5张的简略版celtic cross&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/2015-q1/spread1.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;toc_0&#34;&gt;&lt;strong&gt;The Hierophant &amp;ldquo;教皇&amp;rdquo;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;代表教育、信仰以及集体认同感的教皇 这里毫无疑问正代表了我写博客的动机和追求&lt;/p&gt;

&lt;p&gt;“教学相长”，了解、掌握一些知识只是一个起点，要融会贯通更进一步，最简单的方法莫过于教别人。你会发现原本自以为掌握的知识其实杂乱无章，没有条例；会发现你只知其一不知其二，只能描述表象而无法教人原理；你还会发现原来别人理解问题的方式和你是不一样的……&lt;/p&gt;

&lt;p&gt;教皇同时代表服从信仰/传统以及集体归属&lt;/p&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;&lt;strong&gt;Ace of Wands &amp;ldquo;权杖Ace&amp;rdquo;&lt;/strong&gt; 逆向&lt;/h3&gt;

&lt;p&gt;Ace代表了对应牌组的起源、本质力量。权杖Ace蕴含的力量是创造力、勇气、热情和自信。
出现在代表潜意识的下方而且逆向，暗示这种力量虽然存在，但并没有被充分展现。也就是提醒我要发挥出自己潜在的热情和创造力，更积极更主动地创造内容。&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;&lt;strong&gt;Knight of Pentacles &amp;ldquo;钱币骑士&amp;rdquo;&lt;/strong&gt; 逆向&lt;/h3&gt;

&lt;p&gt;骑士是激进、两面性的代名词。钱币骑士代表地属性的极端：坚定／固执，严谨／洁癖，现实／悲观……
出现在代表过去的左侧而且逆向，暗示这样的力量曾经带来不利影响，而现在需要摆脱或发挥其正面的力量。独立开始&lt;a href=&#34;http://press.mcfog.wang/&#34;&gt;http://press.mcfog.wang/&lt;/a&gt;的时候，我希望写一个纯粹且高质量的技术博客（至今如此），不希望用诸如“XX学习笔记(手册翻译)”之类的内容充斥我的技术博客，希望坚持内容原创且有思考，有深度。这直接导致内容输出异常艰难，很多时候一些碎片化的观点难以表达。&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;&lt;strong&gt;Temperance &amp;ldquo;节制&amp;rdquo;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;代表平衡、节制、组合的节制，这张牌指示力量的调和，换中国人的说法大约就是“中庸”。出现在代表态度、目标和表意识的上方，暗示我已经发现了矛盾的存在，调和这些不同的力量是我希望能做到的。&lt;/p&gt;

&lt;p&gt;骑士本身就意味着极限和矛盾，钱币骑士的矛盾在于过度的坚持，缺乏变化，固执于避免缺点而无法发现优点。节制的出现暗示防止钱币骑士的力量走向极端而带来负面影响，保持其坚定严谨的优点同时，适度地以积极、乐观的态度对待写博客，避免过度追求质量。&lt;/p&gt;

&lt;p&gt;权杖Ace和钱币骑士分别已逆向出现在下方和左方是这个牌阵的另一个矛盾，权杖ace热情、创造、自信，乐观而开放，钱币骑士严谨、保守、现实，低调而坚持。节制暗示着我需要找到他们之间的平衡，来发挥出他们正面的力量。说到底，“写博客”大约对应权杖，“坚持”似乎适合钱币，“坚持写博客”这件事确实可以说是热情创造与努力坚持的平衡。过于偏向权杖的力量会导致后劲不足，不了了之，而过于偏向钱币则文思枯竭，索然无味。&lt;/p&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;&lt;strong&gt;Six of Wands &amp;ldquo;权杖六&amp;rdquo;&lt;/strong&gt; 逆向&lt;/h3&gt;

&lt;p&gt;凯旋，赞美，自豪是权杖六带来的力量。以逆向出现在揭示未来的右侧，暗示虽然可以期待将来的成功，但仍有某些因素妨碍权杖六发挥它的力量，同时需要提防骄傲自满，沉溺于胜利之中。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;总体看来这是一个保守看好的牌阵，在&lt;strong&gt;创作的热情&lt;/strong&gt;和&lt;strong&gt;低调的坚持&lt;/strong&gt;中寻求&lt;strong&gt;平衡&lt;/strong&gt;，&lt;strong&gt;传播学识&lt;/strong&gt;并找到&lt;strong&gt;集体认同&lt;/strong&gt;，提防&lt;strong&gt;骄傲自满&lt;/strong&gt;的同时享受&lt;strong&gt;赞美&lt;/strong&gt;，塔罗牌似乎这么诉说着&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>mcfog的一己之见 新年第一期</title>
      <link>http://inside.mcfog.wang/2015/01/ichizon-1/</link>
      <pubDate>Fri, 02 Jan 2015 16:18:14 CST</pubDate>
      
      <guid>http://inside.mcfog.wang/2015/01/ichizon-1/</guid>
      <description>

&lt;!--================================!--&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;&lt;strong&gt;该不该从事更多项目？&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://segmentfault.com/q/1010000002439221/a-1020000002439395&#34;&gt;问题&lt;/a&gt; by &lt;a href=&#34;http://segmentfault.com/u/guotong1988&#34;&gt;郭同jet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;公司有公司的项目，虽然主要分配给我的工作A比较无聊，但也偷偷接触了一些公司的核心项目B，
没有时间搞B，这时候又有github上的项目C诱惑，&lt;/p&gt;

&lt;p&gt;好好搞B的话，也许能提高收入，但C上能学到东西。&lt;/p&gt;

&lt;p&gt;又希望早日结束A，而公司目前缺人，不让俺全职搞B。
有点想把C砍掉的意思。。C回报慢周期长&lt;/p&gt;

&lt;p&gt;“andrew ng语重心长的说，每次专心做一件事情就好了，因为你做的最大的事情远远大于次大的，例如乔布斯的苹果和皮克斯。”&lt;/p&gt;

&lt;p&gt;做一件事 one at a time，据说这句话最近很流行，纠结。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;我的看法&lt;/h2&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;A.&lt;/h3&gt;

&lt;p&gt;无聊项目变有趣的方法可以是流程自动化 文档化 或者重构。这些同时还为你能抽身创造客观条件&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;B.&lt;/h3&gt;

&lt;p&gt;你不可能没有时间搞B，没有时间100%只是借口，在我看来可能的原因有 你懒／老板不让你搞／或者是你本职的A没搞好等等，A没搞好的话参见上一条，创造你能抽身的条件；懒的话自己想办法解决；老板不让你搞的话，在解决了其他问题以后，找老板谈，告诉他你已经把A项目撸圆，不需要很多精力维护，B项目你已经了解了觉得很有趣，你对B项目的看法规划等等&lt;/p&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;C.&lt;/h3&gt;

&lt;p&gt;C能学到东西，A.B学不到是假象。C如果和公司无关，那么就只能在把AB搞漂亮之外的时间来搞，这是基本职业素养，时间自己找。 千万不要觉得只有C才能学到东西就好。我的建议是公司如果压力大的话不妨先抛开C，投入精力在改善AB两个项目，优化架构，或者是和老板沟通增加AB的资源（放慢研发周期或者加人），略微卸掉压力以后再找时间来玩C&lt;/p&gt;

&lt;hr /&gt;

&lt;!--================================!--&gt;

&lt;h2 id=&#34;toc_5&#34;&gt;&lt;strong&gt;为什么国内有不少PHP程序员不喜欢THINKPHP，甚至鄙视THINKPHP？&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://segmentfault.com/q/1010000002443290&#34;&gt;问题&lt;/a&gt; by &lt;a href=&#34;http://segmentfault.com/u/xiaohuaer&#34;&gt;123456&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;为什么国内有不少PHP程序员不喜欢THINKPHP，甚至鄙视THINKPHP？&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;toc_6&#34;&gt;我的看法&lt;/h2&gt;

&lt;p&gt;自古文人相轻，程序员更甚，所谓的鄙视不是简单的链条或循环，而是密密麻麻的有向图，什么技术都有人鄙视&lt;/p&gt;

&lt;p&gt;我的看法是技术是有&lt;strong&gt;适用场景&lt;/strong&gt;的，什么样的业务，什么样的硬件，包括公司已有什么样的开发人员，什么样的开发人员市场上容易招聘等等各种因素都会影响到技术选择&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;就比如说“世界上最好的语言”，其古怪程度确实罄竹难书，有篇知名博文用两头都是起子的锤子来描述并不为过，但只需要“人好召，环境好配，运维简便，性能过硬” 两头都是起子的锤子也至少能在市场占有方面完爆很多竞争对手。市场是不会说谎的，用的人多的技术一定有它的优点&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;作为负责技术选型的lead programmer，必须综合考虑所有的因素来选择对公司最合适的技术，而非争个人喜好或是仅靠单纯的某个方面做出选择&lt;/p&gt;

&lt;p&gt;而一旦某个项目技术选型确定，或者是你加入的是已经成熟的项目，那么吐槽已定的技术栈就没什么建设性了。这时候适应已有的思维带着镣铐跳舞才是正道，当然如果能够融合其他技术栈的思想来弥补现有技术栈的一些缺陷就更好了。&lt;/p&gt;

&lt;p&gt;说回thinkphp的话，我最近否决thinkPHP的理由和否决Laravel的大致理由是一样的：我不需要全功能的框架&lt;/p&gt;

&lt;hr /&gt;

&lt;!--================================!--&gt;

&lt;h2 id=&#34;toc_7&#34;&gt;&lt;strong&gt;如何看待敏捷开发？&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://segmentfault.com/q/1010000000487553&#34;&gt;问题&lt;/a&gt; by &lt;a href=&#34;http://segmentfault.com/u/edagarli&#34;&gt;edagarli&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;能否根据你用敏捷开发的经验简要的说下敏捷开发。&lt;/p&gt;

&lt;p&gt;谈谈你自己的理解即可。几句话，几段话，都可。&lt;/p&gt;

&lt;p&gt;我知道这不是编程语言，我只是想了解大家在项目中用到敏捷开发时候，对其的理解。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;toc_8&#34;&gt;我的看法&lt;/h2&gt;

&lt;p&gt;有人说这是某种思想，有人说这是某名字和古董OS一样的实践，又有人说这是另一些实践&lt;/p&gt;

&lt;p&gt;我讨厌这种暧昧不清的词&lt;/p&gt;

&lt;p&gt;我只认为并相信&lt;br /&gt;
a)高效的团队开发有必要遵循某种方法/流程&lt;br /&gt;
b)方法/流程是随时都可以优化而且应该不断优化的&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;这是我在 &lt;a href=&#34;http://segmentfault.com/&#34;&gt;SegmentFault&lt;/a&gt; 上的问题回答选编，遵循&lt;a href=&#34;http://creativecommons.org/licenses/by-sa/3.0/cn/&#34;&gt;CC BY-SA 3.0 CN&lt;/a&gt; 分享&lt;/p&gt;

&lt;p&gt;题图：万智【鄙视】&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/2015-q1/ktk69.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Zero</title>
      <link>http://inside.mcfog.wang/2014/03/zero/</link>
      <pubDate>Sat, 29 Mar 2014 04:50:00 CST</pubDate>
      
      <guid>http://inside.mcfog.wang/2014/03/zero/</guid>
      <description>&lt;p&gt;这是第一篇文章，我是mcfog，一个怀揣小小文艺梦想的技术宅。我的技术不是很好，技术博客有写一些，但说句大话，效果一般(-_-)。个人博客曾经有写过，但没个主题也没人关注，缺乏更新的动力。朋友圈偶尔骚一把，但篇幅受限，还混在日常吐槽之中，还没有缺乏历史积累。于是穷途末路之下突然想起还有公共帐号这么个神奇的似乎介于上述种种地方之间的地方，故而来这么尝试一把。&lt;/p&gt;

&lt;p&gt;据说程序员当中擅长写字的不多，我也是个语文不用几乎，就是不及格的差学生。但好歹有朋友给我“文艺”的评价，于是我觉得可以花一些时间来为赋新词强说愁一把。这里的定位呢大概算是科技人文，或者说程序员人文吧。我以为在茫茫程序员之中，我还属于幸福指数比较高的一半，也希望能将我小小的幸福分享给大家，提升一下大家的幸福指数。&lt;/p&gt;

&lt;p&gt;帐号的名字『M薇C信』，是去年还是前年的时候，随便点点的时候起的，起因大概是原来想起类似MC的微信什么之类的名字。等想把公众帐号注册起来的时候，发现名字竟是完全不让改的。&lt;/p&gt;

&lt;p&gt;第一篇文章往往是About类型的比较好，我也已经About了好久了，那么顺着名字这个话题谈谈今天的主题吧。我一直相信“名字”这个东西是蕴含力量的。&lt;/p&gt;

&lt;p&gt;由于肚子没什么干货，掠过各类佐证和考察，大致提纲有&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;姓和氏，祖先崇拜，贵族身份（矮人把族谱全写在名字里很带感吧）&lt;/li&gt;
&lt;li&gt;辈份（●●●●IV世 一下子很带感吧）&lt;/li&gt;
&lt;li&gt;父母(命名者)的期许（1949年有多少个●建国出生呢）&lt;/li&gt;
&lt;li&gt;社会对你的认知（人在社会中的存在，名字是第一象征）&lt;/li&gt;
&lt;li&gt;心理暗示（以上的因素夹杂在一起，结合自己的心理暗示，最终变成为名字的力量）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;或许是由于中二迟迟不能痊愈，我总是倾向于将我的名字作“避世”“隐者”解，以此来解释我社交技能的蹩脚（&lt;del&gt;当然本质只是现实逃避&lt;/del&gt;）。后来在高中，又给自己起了一个ID=mcfog，由『感觉很神秘又很空虚的fog』和『加在名字前不明觉历的mc』组成，这个ID随我至今。慢慢的，我渐渐从我的名字中感受到一些力量，慢慢意识到姓名承载了我在现实社会之中的存在，ID承载了我在互联网上的存在。&lt;/p&gt;

&lt;p&gt;所谓“有名人”的名字固然有着强大的力量，但普通人的名字同样是蕴含自己的力量的：想象一下突然有一天你改了个名字，其实这根本做不到对不对，认识你的人仍然会用原来的名字称呼你，你的新名字没有任何力量。你必须向几乎所有你认识的人，向整个社会解释你改名了，让他们用新名字称呼你，让信用卡换一张带新名字的卡片，换身份证等等。然后再经过时间的洗刷，渐渐的你的老名字的力量才会转移到新名字之中，当中一般还有损耗。同时你的老名字的力量也绝不会消失，他会待在你的“曾用名”之中，已经失去联系的旧识还以老名字来识别你，你的最亲近的父母爱人也对你的老名字有反应。&lt;/p&gt;

&lt;p&gt;程序员十之八九有“起名障碍”，恐怕就是因为我们最清楚名字的力量，这种被称为标识符的东西，甚至直接决定了一大段代码的品味&lt;del&gt;、逼格&lt;/del&gt;。人类历史上从来没有任何一种创造者会需要像程序员这样频繁的来起名字：诗人不会为自己写的每一个诗句起一个名字；画家不会为自己画作的每一部分起一个名字；建筑师不会为建筑每根柱子起一个名字；工程师也最多只是给图纸上的柱子分配一个编号……只有程序员，只有计算机程序，作为创作品，其&lt;strong&gt;内部&lt;/strong&gt;需要如此之多的名字，以至于命名风格可以成为程序风格的重要部分，命名规范可以成为专业程序员必须协商且遵循的守则。&lt;/p&gt;

&lt;p&gt;如果需要让一段程序不可读，很多时候只要拿掉所有的名字就够了。从这个角度上来说，可以说程序员对程序的认知是完全通过其中的名字来进行的，不遵守语法编译器会报错，但程序员照样能看懂（还能矫正），但去掉了名字，即使语法上无错可以编译运行，程序员却是再也无法理解了。名字是程序员认知一个程序元素的最重要的乃至几乎唯一的手段，所以程序员才会对起名感到畏惧：他们清楚一堆好名字甚至能让程序琅琅上口，而一个烂名字是怎样的万丈深渊，坑人于无形之间。&lt;/p&gt;

&lt;p&gt;结论：&lt;del&gt;把变量叫data把方法叫call的人赶紧去死一死&lt;/del&gt; 珍惜自己的姓名、网名、游戏名，想想名字带给你的力量，对你的影响如何。如果有机会起名字，多花点时间，多花点心思。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;题图：塔罗牌【0 愚者】&lt;/p&gt;

&lt;p&gt;尾图：万智 【无名倒错】&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/img/2014-q1/lw128.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>公众帐号</title>
      <link>http://inside.mcfog.wang/goto/follow/</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      
      <guid>http://inside.mcfog.wang/goto/follow/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>